[tox]
envlist =
    py38
    py39
    py310
    py311
    cercis
    check-self
    flake8-basic
    flake8-misc
    flake8-docstrings
    pre-commit


[gh-actions]
python =
    3.8: py38, cercis, check-self, flake8-basic, flake8-misc, flake8-docstrings, pre-commit
    3.9: py39, cercis, check-self, flake8-basic, flake8-misc, flake8-docstrings, pre-commit
    3.10: py310, cercis, check-self, flake8-basic, flake8-misc, flake8-docstrings, pre-commit
    3.11: py311, cercis, check-self, flake8-basic, flake8-misc, flake8-docstrings, pre-commit


[testenv:cercis]
deps =
    cercis
skip_install = true
commands =
    # use the '--check' flag to avoid accidentally formatting code
    cercis --check --diff --extend-exclude=.*tests/data.* pydoclint tests


[testenv:flake8-basic]
skip_install = true
deps = flake8>=5.0
commands =
    flake8 .


[testenv:flake8-misc]
skip_install = true
deps =
    flake8-bugbear
    flake8-comprehensions
    flake8-eradicate
    flake8-broken-line
    flake8-quotes
    flake8-debugger
    flake8-length
    flake8-clean-block
    flake8-indent-in-def
    flake8-picky-parentheses
    flake8-implicit-str-concat
    flake8-return
    flake8-broken-line
commands =
    flake8 --select B,C,D,E800,N4,Q,T,LN,CLB,IND,PAR,ISC,R,N400 .


[testenv:flake8-docstrings]
skip_install = true
deps =
    flake8-docstrings
commands =
    flake8 --ignore D100,D104,D105,D107,D400,D205 --select D ./pydoclint


[testenv]
deps = pytest
commands =
    pytest --tb=long .


[testenv:check-self]
commands =
    pip install -e .
    pydoclint --config=pyproject.toml .


[testenv:pre-commit]
skip_install = true
deps =
    pre-commit
set_env =
    # Skipping auto-formatter here to avoid accidentally formatting code
    SKIP = cercis
commands =
    pre-commit run -a


[flake8]
max-line-length = 88
extend-ignore =
    # E501: line length
    E501,
    # LN002: doc/comment line too long
    LN002,
    # W503 and W504 are mutually exclusive; we choose to follow W504
    W503,
count = true
statistics = true
max-complexity = 10
exclude =
    .*,
    venv/*,
    tests/data/*,
    unparser.py
